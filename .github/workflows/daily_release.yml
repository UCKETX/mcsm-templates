name: Daily Market Data Update and Release

on:
  schedule:
    # 每天UTC时间00:00运行 (北京时间08:00)
    - cron: '0 0 * * *'
  workflow_dispatch: # 允许手动触发

permissions:
  contents: write
  actions: read

jobs:
  update-and-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: requirements.txt

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -U -r requirements.txt

      - name: Backup Previous Server Data
        run: |
          # 备份现有的server.json文件
          if [ -f "server.json" ]; then
            cp server.json server_previous.json
          fi

      - name: Update Database and Generate Server Data
        run: |
          echo "开始更新数据库..."
          python main.py -i
          python main.py -u
          echo "生成服务器数据..."
          python generate_market.py

      - name: Check for Changes and Generate Release Notes
        id: changes
        run: |
          # 检查文件变化
          CHANGES_DETECTED=false
          
          # 检查server.json是否有变化
          if [ -f "server_previous.json" ] && [ -f "server.json" ]; then
            if ! cmp -s server_previous.json server.json; then
              CHANGES_DETECTED=true
              echo "检测到server.json文件变化"
            else
              echo "server.json文件无变化"
            fi
          elif [ -f "server.json" ] && [ ! -f "server_previous.json" ]; then
            CHANGES_DETECTED=true
            echo "检测到新的server.json文件（首次运行）"
          elif [ ! -f "server.json" ]; then
            echo "错误：未找到server.json文件"
            exit 1
          fi
          
          # 生成详细的变更说明
          if [ "$CHANGES_DETECTED" = "true" ]; then
            echo "正在分析变更内容..."
            
            # 使用仓库中的analyze_changes.py脚本
            python3 analyze_changes.py server_previous.json server.json
          fi
          
          echo "changes_detected=$CHANGES_DETECTED" >> $GITHUB_OUTPUT

      - name: Create Release Tag
        if: steps.changes.outputs.changes_detected == 'true'
        id: tag
        run: |
          # 生成基于日期的标签
          TAG_NAME="v$(date +'%Y.%m.%d')"
          
          # 如果同一天已有标签，添加序号
          COUNTER=1
          ORIGINAL_TAG=$TAG_NAME
          while git tag -l | grep -q "^$TAG_NAME$"; do
            TAG_NAME="${ORIGINAL_TAG}-${COUNTER}"
            COUNTER=$((COUNTER + 1))
          done
          
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "创建标签: $TAG_NAME"

      - name: Create GitHub Release
        if: steps.changes.outputs.changes_detected == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag_name }}
          name: "MCSL服务器数据 - ${{ steps.tag.outputs.tag_name }}"
          body_path: release_notes.md
          files: |
            server.json
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup Temporary Files
        if: always()
        run: |
          rm -f server_previous.json
          rm -f release_notes.md

      - name: Summary
        if: steps.changes.outputs.changes_detected == 'true'
        run: |
          echo "✅ 数据更新完成并已发布到 Release: ${{ steps.tag.outputs.tag_name }}"
          echo "📦 包含文件: server.json"
          echo "📝 发布说明已自动生成"

      - name: No Changes Summary
        if: steps.changes.outputs.changes_detected == 'false'
        run: |
          echo "ℹ️ 未检测到数据变化，跳过发布"
          echo "📊 数据已是最新状态"